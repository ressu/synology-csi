apiVersion: v1
kind: ServiceAccount
metadata:
  name: synology-csi-node
  namespace: synology-csi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: synology-csi-node
  namespace: synology-csi
rules:
  - resources: ["secrets"]
    apiGroups: [""]
    verbs: ["get", "list"]
  - resources: ["nodes"]
    apiGroups: [""]
    verbs: ["get", "list", "update"]
  - resources: ["namespaces"]
    apiGroups: [""]
    verbs: ["get", "list"]
  - resources: ["persistentvolumes"]
    apiGroups: [""]
    verbs: ["get", "list", "watch", "update"]
  - resources: ["volumeattachments"]
    apiGroups: ["storage.k8s.io"]
    verbs: ["get", "list", "watch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: synology-csi-node
  namespace: synology-csi
roleRef:
  name: synology-csi-node
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
  - name: synology-csi-node
    namespace: synology-csi
    kind: ServiceAccount
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: synology-csi-iscsiadm
  namespace: synology-csi
data:
  iscsiadm: |
    #!/bin/sh
    if [ -x /host/sbin/iscsiadm ]; then
      chroot /host /sbin/iscsiadm "$@"
    elif [ -x /host/usr/local/sbin/iscsiadm ]; then
      chroot /host/usr/local/sbin/iscsiadm "$@"
    elif [ -x /host/bin/iscsiadm ]; then
      chroot /host /bin/iscsiadm "$@"
    elif [ -x /host/usr/local/bin/iscsiadm ]; then
      chroot /host /usr/local/bin/iscsiadm "$@"
    else
      chroot /host iscsiadm "$@"
    fi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: synology-csi-node
  namespace: synology-csi
spec:
  selector:
    matchLabels:
      app: synology-csi-node
  template:
    metadata:
      labels:
        app: synology-csi-node
    spec:
      serviceAccount: synology-csi-node
      hostNetwork: true
      containers:
        - name: csi-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.3.0
          args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.synology.com/csi.sock
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: csi-plugin
          image: ghcr.io/ressu/synology-csi:v1
          args:
            - --nodeid=$(KUBE_NODE_NAME)
            - --endpoint=$(CSI_ENDPOINT)
            - --synology-config
            - /etc/synology/syno-config.yml
            - --logtostderr
          env:
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: DEVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /csi
            - name: device-dir
              mountPath: /dev
            - name: synology-config
              readOnly: true
              mountPath: /etc/synology
            - name: host-root
              mountPath: /host
            - name: chroot-iscsiadm
              mountPath: /sbin/iscsiadm
              subPath: iscsiadm
          imagePullPolicy: Always
          securityContext:
            privileged: true
      volumes:
        - name: kubelet-dir
          hostPath:
            type: Directory
            path: /var/lib/kubelet
        - name: plugin-dir
          hostPath:
            type: DirectoryOrCreate
            path: /var/lib/kubelet/plugins/csi.synology.com/
        - name: registration-dir
          hostPath:
            type: Directory
            path: /var/lib/kubelet/plugins_registry
        - name: device-dir
          hostPath:
            type: Directory
            path: /dev
        - name: chroot-iscsiadm
          configMap:
            name: synology-csi-iscsiadm
            defaultMode: 0755
        - name: host-root
          hostPath:
            type: Directory
            path: /
        - name: synology-config
          secret:
            secretName: synology-config
